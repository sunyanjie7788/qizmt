<SourceCode>
  <Jobs>
    <Job Name="regression_test_using_mr_grouped_Preprocessing" Custodian="" Email="">
      <IOSettings>
        <JobType>local</JobType>
      </IOSettings>
      <Local>
        <![CDATA[
        public virtual void Local()
        {
            Shell(@"Qizmt del regression_test_using_mr_grouped_*.txt");
            Shell(@"Qizmt gen regression_test_using_mr_grouped_Input.txt 500KB");
        }
        ]]>
      </Local>
    </Job>
    <Job Name="regression_test_using_mr_grouped" Custodian="" Email="">
      <IOSettings>
        <JobType>mapreduce</JobType>
        <KeyLength>100</KeyLength>
        <DFSInput>dfs://regression_test_using_mr_grouped_Input.txt</DFSInput>
        <DFSOutput>dfs://regression_test_using_mr_grouped_Output.txt</DFSOutput>
        <OutputMethod>grouped</OutputMethod>
      </IOSettings>
      <Add Reference="system.printing.dll" Type="system"/>
      <Add Reference="system.web.dll" Type="system"/>
      <Using>System.Printing</Using>
      <Using>System.Web</Using>
      <MapReduce>
        <Map>
          <![CDATA[
          public virtual void Map(ByteSlice line, MapOutput output)
          {
                PrintJobStatus status = PrintJobStatus.Deleted;
                AspNetHostingPermissionLevel permission = AspNetHostingPermissionLevel.Medium;
                string val = status.ToString() + " " + permission.ToString();
                
                output.Add(line, ByteSlice.Prepare(val));
          }
        ]]>
        </Map>
        <Reduce>
          <![CDATA[
          public override void Reduce(ByteSlice key, ByteSliceList values, ReduceOutput output)
          {
                PrintJobStatus status = PrintJobStatus.Deleted;
                AspNetHostingPermissionLevel permission = AspNetHostingPermissionLevel.Medium;
                string val2 = status.ToString() + " " + permission.ToString();
                
                string skey = key.ToString();
                string val = values[0].Value.ToString();
                
               output.Add(ByteSlice.Prepare(skey + ":" + val + val2));
          }
        ]]>
        </Reduce>
      </MapReduce>
    </Job>
    <Job Name="regression_test_using_mr_grouped_DisplayInputData" Custodian="" Email="" Description="Display input data">
      <IOSettings>
        <JobType>remote</JobType>
        <DFS_IO>
          <DFSReader>dfs://regression_test_using_mr_grouped_Input.txt</DFSReader>
          <DFSWriter>dfs://regression_test_using_mr_grouped_Output2.txt</DFSWriter>
        </DFS_IO>
      </IOSettings>
      <Remote>
        <![CDATA[
          public virtual void Remote(RemoteInputStream dfsinput, RemoteOutputStream dfsoutput)
          {    
                string val = "Deleted Medium";
                StringBuilder sb = new StringBuilder();
                while(dfsinput.ReadLineAppend(sb))
                {
                    string line = sb.ToString();
                    dfsoutput.WriteLine(line + ":" + val + val);
                    sb.Length = 0;
                }
           }
        ]]>
      </Remote>
    </Job>
    <Job Name="regression_test_using_mr_grouped_Preprocessing" Custodian="" Email="">
      <IOSettings>
        <JobType>local</JobType>
      </IOSettings>
      <Local>
        <![CDATA[
        public virtual void Local()
        {
            //Compare input and output file, pass if they are the same.
            Shell(@"Qizmt exec regression_test_checkTestResult.xml regression_test_using_mr_grouped_Output.txt regression_test_using_mr_grouped_Output2.txt regression_test_using_mr_grouped.xml unicode");   
            
            Shell(@"Qizmt del regression_test_using_mr_grouped_*.txt");
        }
        ]]>
      </Local>
    </Job>
  </Jobs>
</SourceCode>
