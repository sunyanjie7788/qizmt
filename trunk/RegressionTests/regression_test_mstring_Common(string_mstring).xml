<SourceCode>
  <Jobs>
    <Job Name=" regression_test_mstring_Common(string_mstring)_Preprocessing" Custodian="" Email="">
      <IOSettings>
        <JobType>local</JobType>
        <!--<LocalHost>localhost</LocalHost>-->
      </IOSettings>
      <Local>
        <![CDATA[
            public virtual void Local()
            {
                Shell(@"Qizmt del  regression_test_mstring_Common(string_mstring)_Input.txt");
                Shell(@"Qizmt del  regression_test_mstring_Common(string_mstring)_Output.txt");
            }
        ]]>
      </Local>
    </Job>
    <Job Name=" regression_test_mstring_Common(string_mstring)_CreateSampleData" Custodian="" Email="" Description="Create sample data">
      <IOSettings>
        <JobType>remote</JobType>
        <DFS_IO>
          <DFSReader></DFSReader>
          <DFSWriter>dfs:// regression_test_mstring_Common(string_mstring)_Input.txt</DFSWriter>
        </DFS_IO>
      </IOSettings>
      <Remote>
        <![CDATA[
            public virtual void Remote(RemoteInputStream dfsinput, RemoteOutputStream dfsoutput)
            {
                //Create sample data.
                int stringLength = 100;
                int rowCount = 2000;                
                               
                Random rnd = new Random(System.DateTime.Now.Millisecond / 2 + System.Diagnostics.Process.GetCurrentProcess().Id / 2);
            
                List<byte> onerow = new List<byte>();
                
                for(long rn = 0; rn < rowCount; rn++)
                {
                    onerow.Clear();
                    
                    //string  
                    for(int cnt = 0; cnt < stringLength; cnt++)
                    {
                        byte b = (byte)rnd.Next((int)' ' + 1, (int)'~' + 1);   
                        
                        onerow.Add(b); 
                    }    
                    
                    dfsoutput.WriteLine(onerow);        
                }     
            }
        ]]>
      </Remote>
    </Job>
    <Job Name=" regression_test_mstring_Common(string_mstring)" Custodian="" Email="">
      <IOSettings>
        <JobType>mapreduce</JobType>
        <KeyLength>int,double</KeyLength>
        <DFSInput>dfs:// regression_test_mstring_Common(string_mstring)_Input.txt</DFSInput>
        <DFSOutput>dfs:// regression_test_mstring_Common(string_mstring)_Output.txt</DFSOutput>
        <OutputMethod>grouped</OutputMethod>
      </IOSettings>
      <MapReduce>
        <Map>
          <![CDATA[
            public virtual void Map(ByteSlice line, MapOutput output)
            {
                 
               
            }
        ]]>
        </Map>
        <Reduce>
          <![CDATA[
            public override void Reduce(ByteSlice key, ByteSliceList values, ReduceOutput output)
            {
               
                
            }
        ]]>
        </Reduce>
      </MapReduce>
    </Job>
    <Job>
      <Narrative>
        <Name>regression_test_mstring_Common(string_msring)_post-processing</Name>
        <Custodian></Custodian>
        <email></email>
      </Narrative>
      <IOSettings>
        <JobType>local</JobType>
      </IOSettings>
      <Local>
        <![CDATA[
        public virtual void Local()
        {
            //Compare input and output file, pass if they are the same.
            Shell(@"Qizmt exec regression_test_checkTestResult.xml regression_test_mstring_Common(string_mstring)_Input.txt regression_test_mstring_Common(string_mstring)_Output.txt regression_test_mstring_Common(string_mstring).xml");     
            
            Shell(@"Qizmt del regression_test_mstring_Common(string_mstring)_Input.txt", true);
            Shell(@"Qizmt del regression_test_mstring_Common(string_mstring)_Output.txt", true); 
        }
        ]]>
      </Local>
    </Job>
  </Jobs>
</SourceCode>
