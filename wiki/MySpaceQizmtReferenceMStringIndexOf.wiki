#summary Qizmt Reference mstring IndexOf
#labels IndexOf,Qizmt,Reference,mstring
<wiki:comment>Image:</wiki:comment><img src="http://qizmt.googlecode.com/svn/wiki/images/Qizmt_logo_small.png" alt="Qizmt logo (small)" />

Back to <wiki:comment>Link:</wiki:comment>[Main Wiki Main] / [MySpaceQizmtReference MySpace Qizmt Reference] / [MySpaceQizmtReferenceMStringMethods Non-static methods of mstring]

<wiki:toc max_depth="2" />

=`IndexOf`=
{{{public int IndexOf(string s)}}}

Returns the index of string s in this mstring.  If the string s is not found in this mstring, -1 is returned.

===Example=== 
{{{
public virtual void Map(ByteSlice line, MapOutput output)
{
    mstring sLine = mstring.Prepare(line);
    mstring name = sLine.NextItemToString(',');

    if (name.IndexOf(" de ") > -1)
    {
        output.Add(name, mstring.Prepare());
    }
} 
}}}
----



{{{public int IndexOf(mstring s)}}}

Returns the index of mstring s in this mstring.  If the mstring s is not found in this mstring, -1 is returned. 

===Example=== 
{{{
public virtual void Map(ByteSlice line, MapOutput output)
{
    mstring sLine = mstring.Prepare(line);
    mstring name = sLine.NextItemToString(',');
    mstring de = mstring.Prepare(" de ");

    if (name.IndexOf(de) > -1)
    {
        output.Add(name, mstring.Prepare());
    }
} 
}}}
----



{{{public int IndexOf(char c)}}}

Returns the index of char c in this mstring.  If the char is not found, -1 is returned. 

===Example=== 
{{{
public virtual void Map(ByteSlice line, MapOutput output)
{
    mstring sLine = mstring.Prepare(line);
    mstringarray parts = sLine.SplitM(' ');

    for (int i = 0; i < parts.Length; i++)
    {
        mstring word = parts[i].TrimM('.').TrimM(',').TrimM('!').TrimM('?').TrimM(':').TrimM(';').TrimM('(').TrimM(')');

        if (word.Length > 0 && word.Length <= 16 && word.IndexOf('.') == 0)
        {
            output.Add(word.ToLowerM(), mstring.Prepare(1));
        }
    }
} 
}}}