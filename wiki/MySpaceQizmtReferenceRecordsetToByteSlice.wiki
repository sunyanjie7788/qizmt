#summary Qizmt Reference recordset PutInt32
#labels Qizmt,Reference,recordset,ToByteSlice
<wiki:comment>Image:</wiki:comment><img src="http://qizmt.googlecode.com/svn/wiki/images/Qizmt_logo_small.png" alt="Qizmt logo (small)" />

Back to <wiki:comment>Link:</wiki:comment>[Main Wiki Main] / [MySpaceQizmtReference MySpace Qizmt Reference] / [MySpaceQizmtReferenceRecordsetMethods Non-static methods of recordset]

<wiki:toc max_depth="2" />

=`ToByteSlice`=
{{{public ByteSlice ToByteSlice()}}}

Converts this recordset to a `ByteSlice`.  This recordset is changed after the conversion.
===Remarks===
It is adivsed not to re-use the recordset after it has been converted to a ByteSlice.

===Example=== 
{{{
public virtual void Map(ByteSlice line, MapOutput output)
{
    mstring sLine = mstring.Prepare(line);
    int x = sLine.NextItemToInt(',');
    int y = sLine.NextItemToInt(',');
    mstring name = sLine.NextItemToString(',');

    recordset key = recordset.Prepare();
    key.PutInt(x);
    key.PutInt(y);

    recordset value = recordset.Prepare();
    value.PutString(name);

    ByteSlice bKey = key.ToByteSlice(10);
    ByteSlice bValue = value.ToByteSlice();

    output.Add(bKey, bValue);
} 
}}}
----



{{{public ByteSlice ToByteSlice(int size)}}}

Converts this recordset to a ByteSlice of length = size.   Padding will occur if the recordset if smaller than size.  If the recordset is bigger than size, it will throw an exception.  This recordset is changed after the conversion.
===Remarks===
It is adivsed not to re-use the recordset after it has been converted to a ByteSlice.

===Example=== 
{{{
public virtual void Map(ByteSlice line, MapOutput output)
{
    mstring sLine = mstring.Prepare(line);
    int x = sLine.NextItemToInt(',');
    int y = sLine.NextItemToInt(',');
    mstring name = sLine.NextItemToString(',');

    recordset key = recordset.Prepare();
    key.PutInt(x);
    key.PutInt(y);

    recordset value = recordset.Prepare();
    value.PutString(name);

    ByteSlice bKey = key.ToByteSlice(10);
    ByteSlice bValue = value.ToByteSlice();

    output.Add(bKey, bValue);
} 
}}}